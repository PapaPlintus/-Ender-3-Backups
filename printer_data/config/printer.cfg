# This file contains pin mappings for the stock 2021 Creality Ender 3
# S1 & S1 Pro. To use this config, check the STM32 Chip on the
# Mainboard, during "make menuconfig" select accordingly either the
# STM32F103 with "28KiB bootloader" or the STM32F401 with
# "64KiB bootloader" and serial (on USART1 PA10/PA9) for both.

# For a direct serial connection, in "make menuconfig" select
# "Enable extra low-level configuration options" and  Serial
# (on USART2 PA3/PA2), which is on the 10 pin IDC cable used
# for the LCD module as follows: 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The filename
# must be changed to "firmware.bin"

# With STM32F401, you might need to put "firmware.bin" in a
# folder on the SD card called "STM32F4_UPDATE" in order to flash.

# See docs/Config_Reference.md for a description of parameters.

[include mainsail.cfg]
[include OrbiterSensor.cfg]
[include KAMP_Settings.cfg]
[include Adaptive_Meshing.cfg]
[include Line_Purge.cfg]
[include Smart_Park.cfg]


[stepper_x]
step_pin: PB13
dir_pin: !PB12
enable_pin: !PB14
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC0
position_endstop: 0
position_min: 0
position_max: 235
homing_speed: 50

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 0.580
interpolate: False
stealthchop_threshold: 0


[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC1
position_endstop: -12
position_min: -12
position_max: 235
homing_speed: 50

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 0.580
interpolate: False
stealthchop_threshold: 0

[stepper_z]
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
microsteps: 16
rotation_distance: 8
# endstop_pin: ^PC2
# position_endstop: 0.0
endstop_pin: probe:z_virtual_endstop
position_min: -4
position_max: 250

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 0.580
interpolate: False
stealthchop_threshold: 0


[extruder]
step_pin: PB3
dir_pin: PB4
enable_pin: !PD1
microsteps: 16
full_steps_per_rotation: 200
rotation_distance: 4.637
nozzle_diameter: 0.400
filament_diameter: 1.750
max_extrude_only_distance: 500
max_extrude_only_velocity: 120
pressure_advance: 0.026 #.040 Elegoo Rapid PLA #.026 Polylite PLA
pressure_advance_smooth_time: 0.03
heater_pin: PC8
sensor_type: ATC Semitec 104GT-2
sensor_pin: PA0
#control: pid
#pid_Kp: 20.294
#pid_Ki: 1.197
#pid_Kd: 85.994
min_extrude_temp:190
min_temp: 0
max_temp: 285
max_extrude_cross_section: 5

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
interpolate: true
run_current: 0.4
hold_current: 0.100
sense_resistor: 0.11
driver_TBL: 0
driver_HEND: 6
driver_HSTRT: 7
driver_TOFF: 4

[firmware_retraction]
retract_length: 0.8
# The length of filament (in mm) to retract when G10 is activated,
# and to unretract when G11 is activated (but see
# unretract_extra_length below). The default is 0 mm.
retract_speed: 120
# The speed of retraction, in mm/s. The default is 20 mm/s.
unretract_extra_length: 0
# The length (in mm) of *additional* filament to add when
# unretracting.
unretract_speed: 120
# The speed of unretraction, in mm/s. The default is 10 mm/s.

[heater_bed]
#heater_pin: PA2
#sensor_type: EPCOS 100K B57560G104F
#sensor_pin: PC4
heater_pin: PC9
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
control: pid
# tuned for stock hardware with 50 degree Celsius target
pid_Kp: 54.027
pid_Ki: 0.770
pid_Kd: 948.182
min_temp: 0
max_temp: 130

[heater_fan hotend_fan]
pin: PB15
heater: extruder
heater_temp: 50.0

[fan]
pin: PC6

[controller_fan electronic_enclosure_fan]
pin: PC7
#idle_timeout: 60

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_160010000C50415833323420-if00 #/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
#baud: 115200
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

#CRTouch Probe
[bltouch]
sensor_pin: ^PC14
control_pin: PA1
x_offset: 39
y_offset: 8.2
#z_offset: 1
probe_with_touch_mode: True
pin_up_touch_mode_reports_triggered: True
stow_on_each_sample: False

# Probing position
[safe_z_home]
home_xy_position: 117.5, 117.5
z_hop: 5

# Bed Mesh config
[bed_mesh]
speed: 120
mesh_min: 56.5, 25.7
mesh_max: 211.5, 215.7
probe_count: 4,4
algorithm: bicubic

[pause_resume]
recover_velocity: 25

# Bed screw position and type
#[screws_tilt_adjust]
#screw1: 30,30
#screw1_name: front left screw
#screw2: 200,30
#screw2_name: front right screw
#screw3: 200,200
#screw3_name: rear right screw
#screw4: 30,200
#screw4_name: rear left screw
#screw_thread: CW-M4

[bed_screws]
screw1: 30, 45
screw2: 190, 45
screw3: 190, 215
screw4: 30, 215

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100


#[filament_motion_sensor Filament_Sensor] OLD BTT V2
#extruder: extruder
#switch_pin: ^PC12
#detection_length: 25
#pause_on_runout: True

[exclude_object]

[pause_resume]
#recover_velocity: 50.
#   When capture/restore is enabled, the speed at which to return to
#   the captured position (in mm/s). Default is 50.0 mm/s.

[gcode_macro PRINT_START]          
gcode:
    G92 E0 
    G90  				; Use absolute coordinates
    BED_MESH_CLEAR
    G28     
  
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}

    {% set area_start = params.AREA_START|default('0,0')|string %}
    {% set area_end = params.AREA_END|default('0,0')|string %}
    
    {% set start_coords = area_start.split(',')|map('float')|list %}
    {% set end_coords = area_end.split(',')|map('float')|list %}    

  # Define center area bounds
    {% set center_min_x = 62.5 %}
    {% set center_min_y = 62.5 %}
    {% set center_max_x = 172.5 %}
    {% set center_max_y = 172.5 %}

    # Pre-heat Etruder (no-drip)
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=160
    
    # Check if print is within center area
    {% if start_coords[0] >= center_min_x and start_coords[1] >= center_min_y and end_coords[0] <= center_max_x and end_coords[1] <= center_max_y %}
      SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}
      # Introduce delay here before starting the Mesh & final extruder heat
      {% set MIN_TEMP = BED_TEMP - (BED_TEMP * 0.15) %}  ; Calculates 15% under BED_TEMP
      TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={MIN_TEMP}  ; Waits until the bed reaches the calculated minimum temperature
      BED_MESH_CALIBRATE
      Smart_Park
      # Set the temperature of the extruder and start heating      
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
      # Wait for the extruder and heater_bed to reach target temperature
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP-4} MAXIMUM={EXTRUDER_TEMP+10}
      TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED_TEMP-4} MAXIMUM={BED_TEMP+10}
    {% else %}
      # Print extends beyond center, set temperatures for both beds
      SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}
      # Introduce delay here before starting the Mesh & final extruder heat
      {% set MIN_TEMP = BED_TEMP - (BED_TEMP * 0.15) %}  ; Calculates 15% under BED_TEMP
      TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={MIN_TEMP}  ; Waits until the bed reaches the calculated minimum temperature
      BED_MESH_CALIBRATE
      Smart_Park
      # Set the temperature of the extruder and start heating
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP-4} MAXIMUM={EXTRUDER_TEMP+10}
      TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED_TEMP-4} MAXIMUM={BED_TEMP+10}
      {% endif %}
  
    LINE_PURGE
    G92 E0 				; Reset Extruder
    G1 Z2.0 F3000 			; Move Z Axis up 
    M117 Printing           
       
[gcode_macro PRINT_END]
gcode:
    M400                    ; wait for buffer to clear
    TURN_OFF_HEATERS
    G92 E0              ; zero the extruder
    G91               ; Relative positioning
    G1 E-2 F2700            ; Retract a bit
    G1 X5 Y5 F3000            ; Wipe out
    G1 E-2 Z0.2 F1600           ; Retract and raise Z
    G1 Z4 F3000              ; Raise Z more
    G90               ; Absolute positioning
    G1 X0 Y220            ; Present print
    M107              ; turn off fan
    M84

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    PRINT_END
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} 
    SDCARD_RESET_FILE


[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    M400 
    {% set z = params.Z|default(10)|int %}                                                   
    {% set e = params.E|default(2.5) %} 
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                             
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}                                              
    SAVE_GCODE_STATE NAME=PAUSE                                                                  
    M25                                                                              
    {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       
      G91
      M83
      G1 E-{e} F2100
      G1 Z{z} F900                                                                     
    {% else %}
      SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
    {% endif %}
    SAVE_GCODE_STATE NAME=PAUSEPARK
    G90                                                                                  
    G1 X0 Y220 F6000
    G1 E{e} F2100 
    SET_IDLE_TIMEOUT TIMEOUT=86400                                                       


[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    {% set e = params.E|default(2.5)|int %}                                          
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
    G91                                                                               
    M83
    G1 E-{e} F900   
    RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     
    {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}                                                
      G1 Z{zhop * -1} F900
      G1 E{e+0.5} F900    
    {% else %}                      
      G1 Z{zhop * -1} F900                                                     
    {% endif %}
    M400
    RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60 
    M24

    

[input_shaper]
shaper_freq_x: 67
shaper_freq_y: 31
shaper_type: mzv

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#*# z_offset = 2.370
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 33.131
#*# pid_ki = 2.026
#*# pid_kd = 135.423
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.080000, 0.062500, 0.062500, 0.065000
#*# 	  0.155000, 0.065000, 0.035000, 0.012500
#*# 	  0.155000, 0.080000, 0.035000, 0.022500
#*# 	  0.177500, 0.060000, 0.045000, 0.050000
#*# x_count = 4
#*# y_count = 4
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 56.5
#*# max_x = 211.47
#*# min_y = 25.7
#*# max_y = 215.69
